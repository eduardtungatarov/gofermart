// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: user.sql

package queries

import (
	"context"
)

const FindUserByLogin = `-- name: FindUserByLogin :one
SELECT id, login, password FROM users
WHERE login = $1 LIMIT 1
`

// FindUserByLogin
//
//	SELECT id, login, password FROM users
//	WHERE login = $1 LIMIT 1
func (q *Queries) FindUserByLogin(ctx context.Context, db DBTX, login string) (User, error) {
	row := db.QueryRowContext(ctx, FindUserByLogin, login)
	var i User
	err := row.Scan(&i.ID, &i.Login, &i.Password)
	return i, err
}

const SaveUser = `-- name: SaveUser :one
INSERT INTO users (login, password)
VALUES ($1, $2)
RETURNING id, login, password
`

type SaveUserParams struct {
	Login    string
	Password string
}

// SaveUser
//
//	INSERT INTO users (login, password)
//	VALUES ($1, $2)
//	RETURNING id, login, password
func (q *Queries) SaveUser(ctx context.Context, db DBTX, arg SaveUserParams) (User, error) {
	row := db.QueryRowContext(ctx, SaveUser, arg.Login, arg.Password)
	var i User
	err := row.Scan(&i.ID, &i.Login, &i.Password)
	return i, err
}
