// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package queries

import (
	"context"
)

type Querier interface {
	//AddBalance
	//
	//  INSERT INTO balance (user_id, current, withdrawn)
	//  VALUES ($1, $2, 0)
	//  ON CONFLICT (user_id)
	//  DO UPDATE SET current = balance.current + EXCLUDED.current
	//  RETURNING id, user_id, current, withdrawn
	AddBalance(ctx context.Context, db DBTX, arg AddBalanceParams) (Balance, error)
	//DeductFromBalance
	//
	//  UPDATE balance
	//  SET withdrawn = withdrawn + $1, current = current - $1
	//  WHERE user_id = $2
	//  RETURNING id, user_id, current, withdrawn
	DeductFromBalance(ctx context.Context, db DBTX, arg DeductFromBalanceParams) (Balance, error)
	//FindByUserId
	//
	//  SELECT id, user_id, current, withdrawn FROM balance
	//  WHERE user_id = $1
	FindByUserId(ctx context.Context, db DBTX, userID int) (Balance, error)
}

var _ Querier = (*Queries)(nil)
